{"ast":null,"code":"var _jsxFileName = \"/Users/adwaithsreekumar/Desktop/CS/Game AI/Bot/bot-frontend/src/ChessB.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [pos] = useState([game.fen()]);\n  const makeMove = move => {\n    console.log(\"BEF\", evalBoard(game.board()));\n    game.move(move);\n    console.log(\"AFT\", evalBoard(game.board()));\n    pos.push(game.fen());\n    setGame(new Chess(game.fen()));\n  };\n  function selectMove() {\n    let [a, move] = minimax(true, -999999, 999999, 4);\n    makeMove(move);\n  }\n  function minimax(blackPlaying, alpha, beta, depth) {\n    if (depth === 0 || game.isCheckmate()) {\n      return [evalBoard(game.board()), 0];\n    }\n    const possibleMoves = game.moves();\n    if (blackPlaying) {\n      let score = -999999;\n      let bestMove = 0;\n      let t = 0;\n      for (const move of possibleMoves) {\n        game.move(move);\n        let [curScore, a] = minimax(false, alpha, beta, depth - 1);\n        game.undo();\n        if (curScore > score) {\n          score = curScore;\n          bestMove = move;\n          t = a;\n        }\n        alpha = Math.max(alpha, curScore);\n        if (beta <= alpha) break;\n      }\n      return [score, bestMove];\n    } else {\n      let score = 999999;\n      let bestMove = 0;\n      for (const move of possibleMoves) {\n        game.move(move);\n        let [curScore, b] = minimax(true, alpha, beta, depth - 1);\n        game.undo();\n        if (curScore < score) {\n          score = curScore;\n          bestMove = move;\n        }\n        beta = Math.min(beta, curScore);\n        if (beta <= alpha) break;\n      }\n      return [score, bestMove];\n    }\n  }\n  function evalBoard(board) {\n    const pawn_pcsq = [0, 0, 0, 0, 0, 0, 0, 0, 5, 10, 15, 20, 20, 15, 10, 5, 4, 8, 12, 16, 16, 12, 8, 4, 3, 6, 9, 12, 12, 9, 6, 3, 2, 4, 6, 8, 8, 6, 4, 2, 1, 2, 3, -10, -10, 3, 2, 1, 0, 0, 0, -40, -40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    const knight_pcsq = [-10, -10, -10, -10, -10, -10, -10, -10, -10, 0, 0, 0, 0, 0, 0, -10, -10, 0, 5, 5, 5, 5, 0, -10, -10, 0, 5, 10, 10, 5, 0, -10, -10, 0, 5, 10, 10, 5, 0, -10, -10, 0, 5, 5, 5, 5, 0, -10, -10, 0, 0, 0, 0, 0, 0, -10, -10, -30, -10, -10, -10, -10, -30, -10];\n    const bishop_pcsq = [-10, -10, -10, -10, -10, -10, -10, -10, -10, 0, 0, 0, 0, 0, 0, -10, -10, 0, 5, 5, 5, 5, 0, -10, -10, 0, 5, 10, 10, 5, 0, -10, -10, 0, 5, 10, 10, 5, 0, -10, -10, 0, 5, 5, 5, 5, 0, -10, -10, 0, 0, 0, 0, 0, 0, -10, -10, -10, -20, -10, -10, -20, -10, -10];\n    const king_pcsq = [-40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -20, -20, -20, -20, -20, -20, -20, -20, 0, 20, 40, -20, 0, -20, 40, 20];\n    const rook_pcsq = [0, 0, 0, 0, 0, 0, 0, 0, 5, 10, 10, 10, 10, 10, 10, 5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 5, 5, 0, 0, 0];\n    const queen_pcsq = [-20, -10, -10, -5, -5, -10, -10, -20, -10, 0, 0, 0, 0, 0, 0, -10, -10, 0, 5, 5, 5, 5, 0, -10, -5, 0, 5, 5, 5, 5, 0, -5, 0, 0, 5, 5, 5, 5, 0, -5, -10, 5, 5, 5, 5, 5, 0, -10, -10, 0, 5, 0, 0, 0, 0, -10, -20, -10, -10, -5, -5, -10, -10, -20];\n    var score = 0;\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 8; j++) {\n        if (board[i][j]) {\n          switch (board[i][j].type) {\n            case \"r\":\n              if (board[i][j].color == \"w\") score -= rook_pcsq[8 * i + j] + 400;else score += rook_pcsq[8 * (7 - i) + (7 - j)] + 400;\n              break;\n            case \"b\":\n              if (board[i][j].color == \"w\") score -= bishop_pcsq[8 * i + j] + 200;else score += bishop_pcsq[8 * (7 - i) + (7 - j)] + 200;\n              break;\n            case \"n\":\n              if (board[i][j].color == \"w\") score -= knight_pcsq[8 * i + j] + 200;else score += knight_pcsq[8 * (7 - i) + (7 - j)] + 200;\n              break;\n            case \"p\":\n              if (board[i][j].color == \"w\") score -= pawn_pcsq[8 * i + j] + 50;else score += pawn_pcsq[8 * (7 - i) + (7 - j)] + 50;\n              break;\n            case \"k\":\n              if (board[i][j].color == \"w\") score -= king_pcsq[8 * i + j] + 500;else score += king_pcsq[8 * (7 - i) + j] + 500;\n              break;\n            case \"q\":\n              if (board[i][j].color == \"w\") score -= queen_pcsq[8 * i + j] + 500;else score += queen_pcsq[8 * (7 - i) + j] + 500;\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    }\n    return score;\n  }\n  function onDrop(sourceSquare, targetSquare) {\n    try {\n      makeMove({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: \"q\" // always promote to a queen for example simplicity\n      });\n\n      // illegal move\n      setTimeout(selectMove, 200);\n      return true;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chessboard, {\n      position: game.fen(),\n      onPieceDrop: onDrop,\n      autoPromoteToQueen: true,\n      boardWidth: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 6\n  }, this);\n}\n_s(Board, \"ERF0jez/SgXmnsbkRnflvQOycdw=\");\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useState","Chess","Chessboard","jsxDEV","_jsxDEV","Board","_s","game","setGame","pos","fen","makeMove","move","console","log","evalBoard","board","push","selectMove","a","minimax","blackPlaying","alpha","beta","depth","isCheckmate","possibleMoves","moves","score","bestMove","t","curScore","undo","Math","max","b","min","pawn_pcsq","knight_pcsq","bishop_pcsq","king_pcsq","rook_pcsq","queen_pcsq","i","j","type","color","onDrop","sourceSquare","targetSquare","from","to","promotion","setTimeout","e","children","position","onPieceDrop","autoPromoteToQueen","boardWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adwaithsreekumar/Desktop/CS/Game AI/Bot/bot-frontend/src/ChessB.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\n\nexport default function Board() {\n  const [game, setGame] = useState(new Chess());\n  const [pos, ] = useState([game.fen()]);\n\n\n  const makeMove = (move) => {\n    console.log(\"BEF\", evalBoard(game.board()))\n    game.move(move)\n    console.log(\"AFT\", evalBoard(game.board()))\n    pos.push(game.fen())\n    setGame(new Chess(game.fen()))\n  }\n\n\n  function selectMove(){\n    let [a, move] = minimax(true, -999999, 999999, 4)\n    makeMove(move)\n   }\n\n\n  function minimax(blackPlaying, alpha, beta, depth) {\n    if (depth === 0 || game.isCheckmate()) {\n      return [evalBoard(game.board()), 0]\n    } \n\n    const possibleMoves = game.moves();\n\n    \n    if (blackPlaying){\n      let score = -999999;\n      let bestMove = 0\n      let t = 0\n      for (const move of possibleMoves){\n        game.move(move)\n        let [curScore, a] = minimax(false, alpha, beta, depth-1);\n        game.undo()\n        if (curScore > score) {score = curScore; bestMove = move; t =a}\n        alpha = Math.max(alpha, curScore);\n        if (beta <= alpha) break\n      }\n      return [score, bestMove]\n    }\n    else {\n      let score = 999999;\n      let bestMove = 0\n\n      for (const move of possibleMoves){\n        game.move(move)\n        let [curScore, b] = minimax(true, alpha, beta, depth-1);\n        game.undo()\n        if (curScore < score) {score = curScore; bestMove = move}\n        beta = Math.min(beta, curScore);\n        if (beta <= alpha) break\n      }\n      return [score, bestMove]\n    }\n\n  }\n\n\n  function evalBoard(board) {\n    const pawn_pcsq = [\n      0, 0, 0, 0, 0, 0, 0, 0,\n      5, 10, 15, 20, 20, 15, 10, 5,\n      4, 8, 12, 16, 16, 12, 8, 4,\n      3, 6, 9, 12, 12, 9, 6, 3,\n      2, 4, 6, 8, 8, 6, 4, 2,\n      1, 2, 3, -10, -10, 3, 2, 1,\n      0, 0, 0, -40, -40, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0\n    ];\n  \n    const knight_pcsq = [\n        -10, -10, -10, -10, -10, -10, -10, -10,\n        -10, 0, 0, 0, 0, 0, 0, -10,\n        -10, 0, 5, 5, 5, 5, 0, -10,\n        -10, 0, 5, 10, 10, 5, 0, -10,\n        -10, 0, 5, 10, 10, 5, 0, -10,\n        -10, 0, 5, 5, 5, 5, 0, -10,\n        -10, 0, 0, 0, 0, 0, 0, -10,\n        -10, -30, -10, -10, -10, -10, -30, -10\n      ];\n    \n    const bishop_pcsq = [\n        -10, -10, -10, -10, -10, -10, -10, -10,\n        -10, 0, 0, 0, 0, 0, 0, -10,\n        -10, 0, 5, 5, 5, 5, 0, -10,\n        -10, 0, 5, 10, 10, 5, 0, -10,\n        -10, 0, 5, 10, 10, 5, 0, -10,\n        -10, 0, 5, 5, 5, 5, 0, -10,\n        -10, 0, 0, 0, 0, 0, 0, -10,\n        -10, -10, -20, -10, -10, -20, -10, -10\n    ];\n    \n    const king_pcsq = [\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -20, -20, -20, -20, -20, -20, -20, -20,\n        0, 20, 40, -20, 0, -20, 40, 20\n    ];\n\n    const rook_pcsq = [\n      0,  0,  0,  0,  0,  0,  0,  0,\n      5, 10, 10, 10, 10, 10, 10,  5,\n     -5,  0,  0,  0,  0,  0,  0, -5,\n     -5,  0,  0,  0,  0,  0,  0, -5,\n     -5,  0,  0,  0,  0,  0,  0, -5,\n     -5,  0,  0,  0,  0,  0,  0, -5,\n     -5,  0,  0,  0,  0,  0,  0, -5,\n      0,  0,  0,  5,  5,  0,  0,  0\n   ];\n \n\n    const queen_pcsq = [\n      -20, -10, -10, -5, -5, -10, -10, -20,\n      -10, 0, 0, 0, 0, 0, 0, -10,\n      -10, 0, 5, 5, 5, 5, 0, -10,\n      -5, 0, 5, 5, 5, 5, 0, -5,\n      0, 0, 5, 5, 5, 5, 0, -5,\n      -10, 5, 5, 5, 5, 5, 0, -10,\n      -10, 0, 5, 0, 0, 0, 0, -10,\n      -20, -10, -10, -5, -5, -10, -10, -20\n  ];\n  \n\n    var score = 0;\n    for (let i = 0; i < 8; i++){\n      for (let j = 0; j < 8; j++){\n        if (board[i][j]){\n          switch(board[i][j].type){\n            case \"r\":\n              if (board[i][j].color == \"w\") score -= (rook_pcsq[(8*i)+j] + 400)\n              else score += (rook_pcsq[(8*(7-i))+(7-j)] + 400)\n              break;\n            case \"b\":\n              if (board[i][j].color == \"w\") score -= (bishop_pcsq[(8*i)+j] + 200)\n              else score += (bishop_pcsq[(8*(7-i))+(7-j)] + 200)\n              break;\n            case \"n\":\n              if (board[i][j].color == \"w\") score -= (knight_pcsq[(8*i)+j] + 200)\n              else score += (knight_pcsq[(8*(7-i))+(7-j)] + 200)\n              break;\n            case \"p\":\n              if (board[i][j].color == \"w\") score -= (pawn_pcsq[(8*i)+j] + 50)\n              else score += pawn_pcsq[(8*(7-i))+(7-j)] + 50\n              break;\n            case \"k\":\n                if (board[i][j].color == \"w\") score -= (king_pcsq[(8*i)+j] + 500)\n                else score += (king_pcsq[(8*(7-i))+(j)] + 500)\n                break;\n            case \"q\":\n              if (board[i][j].color == \"w\") score -= (queen_pcsq[(8*i)+j] + 500)\n              else score += (queen_pcsq[(8*(7-i))+(j)] + 500)\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    }\n    return score;\n\n   }\n\n\n\n  function onDrop(sourceSquare, targetSquare) {\n    try{\n      makeMove({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: \"q\", // always promote to a queen for example simplicity\n      });\n\n      // illegal move\n      setTimeout(selectMove, 200);\n      return true;\n    }\n    catch (e) { console.log(e)}\n  }\n\n\n  return(\n     <div>\n        <Chessboard position={game.fen()} onPieceDrop={onDrop} autoPromoteToQueen={true} boardWidth={400}/>\n     </div>\n  )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}