{"ast":null,"code":"var _jsxFileName = \"/Users/adwaithsreekumar/Desktop/CS/Game AI/Bot/bot-frontend/src/ChessB.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [pos] = useState([game.fen()]);\n  const makeMove = move => {\n    console.log(\"BEF\", evalBoard(game.board()));\n    game.move(move);\n    console.log(\"AFT\", evalBoard(game.board()));\n    pos.push(game.fen());\n    setGame(new Chess(game.fen()));\n  };\n  function makeRandomMove(possibleMoves) {\n    if (game.isGameOver() || game.isDraw() || possibleMoves.length === 0) return; // exit if the game is over\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length);\n    makeMove(possibleMoves[randomIndex]);\n  }\n  function selectMove() {\n    let [a, move] = minimax(true, -999, 999, 3);\n    makeMove(move);\n  }\n  function minimax(blackPlaying, alpha, beta, depth) {\n    const possibleMoves = game.moves();\n    if (depth === 0 || game.isCheckmate()) {\n      // console.log(game.board(), evalBoard(game.board()))\n      return [evalBoard(game.board()), 0];\n    }\n    if (blackPlaying) {\n      let score = -999;\n      let bestMove = 0;\n      for (const move of possibleMoves) {\n        game.move(move);\n        let [curScore, a] = minimax(false, alpha, beta, depth - 1);\n        game.undo();\n        alpha = Math.max(alpha, curScore);\n        if (beta <= alpha) break;\n        if (curScore > score) {\n          score = curScore;\n          bestMove = move;\n        }\n      }\n      if (bestMove != 0) {\n        game.move(bestMove);\n        // console.log(bestMove, blackPlaying, score, game.fen(), game.board())\n        game.undo();\n      }\n      return [score, bestMove];\n    } else {\n      let score = 999;\n      let bestMove = 0;\n      for (const move of possibleMoves) {\n        game.move(move);\n        let [curScore, b] = minimax(true, alpha, beta, depth - 1);\n        game.undo();\n        beta = Math.min(beta, curScore);\n        if (beta <= alpha) break;\n        if (curScore < score) {\n          score = curScore;\n          bestMove = move;\n        }\n      }\n      // console.log(bestMove, blackPlaying, score, game.fen(), game.board())\n      return [score, bestMove];\n    }\n  }\n  function evalBoard(board) {\n    const pawn_pcsq = [0, 0, 0, 0, 0, 0, 0, 0, 5, 10, 15, 20, 20, 15, 10, 5, 4, 8, 12, 16, 16, 12, 8, 4, 3, 6, 9, 12, 12, 9, 6, 3, 2, 4, 6, 8, 8, 6, 4, 2, 1, 2, 3, -10, -10, 3, 2, 1, 0, 0, 0, -40, -40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    const knight_pcsq = [-10, -10, -10, -10, -10, -10, -10, -10, -10, 0, 0, 0, 0, 0, 0, -10, -10, 0, 5, 5, 5, 5, 0, -10, -10, 0, 5, 10, 10, 5, 0, -10, -10, 0, 5, 10, 10, 5, 0, -10, -10, 0, 5, 5, 5, 5, 0, -10, -10, 0, 0, 0, 0, 0, 0, -10, -10, -30, -10, -10, -10, -10, -30, -10];\n    const bishop_pcsq = [-10, -10, -10, -10, -10, -10, -10, -10, -10, 0, 0, 0, 0, 0, 0, -10, -10, 0, 5, 5, 5, 5, 0, -10, -10, 0, 5, 10, 10, 5, 0, -10, -10, 0, 5, 10, 10, 5, 0, -10, -10, 0, 5, 5, 5, 5, 0, -10, -10, 0, 0, 0, 0, 0, 0, -10, -10, -10, -20, -10, -10, -20, -10, -10];\n    const king_pcsq = [-40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -20, -20, -20, -20, -20, -20, -20, -20, 0, 20, 40, -20, 0, -20, 40, 20];\n    const rook_pcsq = [0, 0, 0, 0, 0, 0, 0, 0, 5, 10, 10, 10, 10, 10, 10, 5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 5, 5, 0, 0, 0];\n    const queen_pcsq = [-20, -10, -10, -5, -5, -10, -10, -20, -10, 0, 0, 0, 0, 0, 0, -10, -10, 0, 5, 5, 5, 5, 0, -10, -5, 0, 5, 5, 5, 5, 0, -5, 0, 0, 5, 5, 5, 5, 0, -5, -10, 5, 5, 5, 5, 5, 0, -10, -10, 0, 5, 0, 0, 0, 0, -10, -20, -10, -10, -5, -5, -10, -10, -20];\n    var score = 0;\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 8; j++) {\n        if (board[i][j]) {\n          switch (board[i][j].type) {\n            case \"r\":\n              if (board[i][j].color == \"w\") score -= rook_pcsq[8 * i + j] + 20;else score += rook_pcsq[8 * (7 - i) + (7 - j)] + 20;\n              break;\n            case \"b\":\n              if (board[i][j].color == \"w\") score -= bishop_pcsq[8 * i + j] + 10;else score += bishop_pcsq[8 * (7 - i) + (7 - j)] + 10;\n              break;\n            case \"n\":\n              if (board[i][j].color == \"w\") score -= knight_pcsq[8 * i + j] + 10;else score += knight_pcsq[8 * (7 - i) + (7 - j)] + 10;\n              break;\n            case \"p\":\n              if (board[i][j].color == \"w\") score -= pawn_pcsq[8 * i + j];else score += pawn_pcsq[8 * (7 - i) + (7 - j)];\n              break;\n            case \"k\":\n              if (board[i][j].color == \"w\") score -= king_pcsq[8 * i + j] + 50;else score += king_pcsq[8 * (7 - i) + j] + 50;\n              break;\n            case \"q\":\n              if (board[i][j].color == \"w\") score -= queen_pcsq[8 * i + j] + 50;else score += queen_pcsq[8 * (7 - i) + j] + 50;\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    }\n    return score;\n  }\n  function onDrop(sourceSquare, targetSquare) {\n    try {\n      makeMove({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: \"q\" // always promote to a queen for example simplicity\n      });\n\n      // illegal move\n      setTimeout(selectMove, 200);\n      return true;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chessboard, {\n      position: game.fen(),\n      onPieceDrop: onDrop,\n      autoPromoteToQueen: true,\n      boardWidth: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 6\n  }, this);\n}\n_s(Board, \"ERF0jez/SgXmnsbkRnflvQOycdw=\");\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useState","Chess","Chessboard","jsxDEV","_jsxDEV","Board","_s","game","setGame","pos","fen","makeMove","move","console","log","evalBoard","board","push","makeRandomMove","possibleMoves","isGameOver","isDraw","length","randomIndex","Math","floor","random","selectMove","a","minimax","blackPlaying","alpha","beta","depth","moves","isCheckmate","score","bestMove","curScore","undo","max","b","min","pawn_pcsq","knight_pcsq","bishop_pcsq","king_pcsq","rook_pcsq","queen_pcsq","i","j","type","color","onDrop","sourceSquare","targetSquare","from","to","promotion","setTimeout","e","children","position","onPieceDrop","autoPromoteToQueen","boardWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adwaithsreekumar/Desktop/CS/Game AI/Bot/bot-frontend/src/ChessB.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\n\nexport default function Board() {\n  const [game, setGame] = useState(new Chess());\n  const [pos, ] = useState([game.fen()]);\n\n\n  const makeMove = (move) => {\n    console.log(\"BEF\", evalBoard(game.board()))\n    game.move(move)\n    console.log(\"AFT\", evalBoard(game.board()))\n    pos.push(game.fen())\n    setGame(new Chess(game.fen()))\n  }\n\n  function makeRandomMove(possibleMoves) {\n    \n    if (game.isGameOver() || game.isDraw() || possibleMoves.length === 0) return; // exit if the game is over\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length);\n    makeMove(possibleMoves[randomIndex]);\n  }\n\n  function selectMove(){\n    let [a, move] = minimax(true, -999, 999, 3)\n    makeMove(move)\n   }\n\n\n\n  function minimax(blackPlaying, alpha, beta, depth) {\n    const possibleMoves = game.moves();\n    if (depth === 0 || game.isCheckmate()) {\n      // console.log(game.board(), evalBoard(game.board()))\n      return [evalBoard(game.board()), 0]\n    } \n    \n    if (blackPlaying){\n      let score = -999;\n      let bestMove = 0\n      for (const move of possibleMoves){\n        game.move(move)\n        let [curScore, a] = minimax(false, alpha, beta, depth-1);\n        game.undo()\n        alpha = Math.max(alpha, curScore);\n        if (beta <= alpha) break\n        if (curScore > score) {score = curScore; bestMove = move}\n\n      }\n      if (bestMove != 0){\n      game.move(bestMove)\n      // console.log(bestMove, blackPlaying, score, game.fen(), game.board())\n      game.undo()\n    }\n\n      return [score, bestMove]\n    }\n    else {\n      let score = 999;\n      let bestMove = 0\n\n      for (const move of possibleMoves){\n        game.move(move)\n        let [curScore, b] = minimax(true, alpha, beta, depth-1);\n        game.undo()\n        beta = Math.min(beta, curScore);\n        if (beta <= alpha) break\n        if (curScore < score) {score = curScore; bestMove = move}\n      }\n      // console.log(bestMove, blackPlaying, score, game.fen(), game.board())\n      return [score, bestMove]\n    }\n\n  }\n\n\n  function evalBoard(board) {\n    const pawn_pcsq = [\n      0, 0, 0, 0, 0, 0, 0, 0,\n      5, 10, 15, 20, 20, 15, 10, 5,\n      4, 8, 12, 16, 16, 12, 8, 4,\n      3, 6, 9, 12, 12, 9, 6, 3,\n      2, 4, 6, 8, 8, 6, 4, 2,\n      1, 2, 3, -10, -10, 3, 2, 1,\n      0, 0, 0, -40, -40, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0\n    ];\n  \n    const knight_pcsq = [\n        -10, -10, -10, -10, -10, -10, -10, -10,\n        -10, 0, 0, 0, 0, 0, 0, -10,\n        -10, 0, 5, 5, 5, 5, 0, -10,\n        -10, 0, 5, 10, 10, 5, 0, -10,\n        -10, 0, 5, 10, 10, 5, 0, -10,\n        -10, 0, 5, 5, 5, 5, 0, -10,\n        -10, 0, 0, 0, 0, 0, 0, -10,\n        -10, -30, -10, -10, -10, -10, -30, -10\n      ];\n    \n    const bishop_pcsq = [\n        -10, -10, -10, -10, -10, -10, -10, -10,\n        -10, 0, 0, 0, 0, 0, 0, -10,\n        -10, 0, 5, 5, 5, 5, 0, -10,\n        -10, 0, 5, 10, 10, 5, 0, -10,\n        -10, 0, 5, 10, 10, 5, 0, -10,\n        -10, 0, 5, 5, 5, 5, 0, -10,\n        -10, 0, 0, 0, 0, 0, 0, -10,\n        -10, -10, -20, -10, -10, -20, -10, -10\n    ];\n    \n    const king_pcsq = [\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -20, -20, -20, -20, -20, -20, -20, -20,\n        0, 20, 40, -20, 0, -20, 40, 20\n    ];\n\n    const rook_pcsq = [\n      0,  0,  0,  0,  0,  0,  0,  0,\n      5, 10, 10, 10, 10, 10, 10,  5,\n     -5,  0,  0,  0,  0,  0,  0, -5,\n     -5,  0,  0,  0,  0,  0,  0, -5,\n     -5,  0,  0,  0,  0,  0,  0, -5,\n     -5,  0,  0,  0,  0,  0,  0, -5,\n     -5,  0,  0,  0,  0,  0,  0, -5,\n      0,  0,  0,  5,  5,  0,  0,  0\n   ];\n \n\n    const queen_pcsq = [\n      -20, -10, -10, -5, -5, -10, -10, -20,\n      -10, 0, 0, 0, 0, 0, 0, -10,\n      -10, 0, 5, 5, 5, 5, 0, -10,\n      -5, 0, 5, 5, 5, 5, 0, -5,\n      0, 0, 5, 5, 5, 5, 0, -5,\n      -10, 5, 5, 5, 5, 5, 0, -10,\n      -10, 0, 5, 0, 0, 0, 0, -10,\n      -20, -10, -10, -5, -5, -10, -10, -20\n  ];\n  \n\n    var score = 0;\n    for (let i = 0; i < 8; i++){\n      for (let j = 0; j < 8; j++){\n        if (board[i][j]){\n          switch(board[i][j].type){\n            case \"r\":\n              if (board[i][j].color == \"w\") score -= (rook_pcsq[(8*i)+j] + 20)\n              else score += (rook_pcsq[(8*(7-i))+(7-j)] + 20)\n              break;\n            case \"b\":\n              if (board[i][j].color == \"w\") score -= (bishop_pcsq[(8*i)+j] + 10)\n              else score += (bishop_pcsq[(8*(7-i))+(7-j)] + 10)\n              break;\n            case \"n\":\n              if (board[i][j].color == \"w\") score -= (knight_pcsq[(8*i)+j] + 10)\n              else score += (knight_pcsq[(8*(7-i))+(7-j)] + 10)\n              break;\n            case \"p\":\n              if (board[i][j].color == \"w\") score -= pawn_pcsq[(8*i)+j] \n              else score += pawn_pcsq[(8*(7-i))+(7-j)]\n              break;\n            case \"k\":\n                if (board[i][j].color == \"w\") score -= (king_pcsq[(8*i)+j] + 50)\n                else score += (king_pcsq[(8*(7-i))+(j)] + 50)\n                break;\n            case \"q\":\n              if (board[i][j].color == \"w\") score -= (queen_pcsq[(8*i)+j] + 50)\n              else score += (queen_pcsq[(8*(7-i))+(j)] + 50)\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    }\n    return score;\n\n   }\n\n\n\n  function onDrop(sourceSquare, targetSquare) {\n    try{\n      makeMove({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: \"q\", // always promote to a queen for example simplicity\n      });\n\n      // illegal move\n      setTimeout(selectMove, 200);\n      return true;\n    }\n    catch (e) { console.log(e)}\n  }\n\n\n  return(\n     <div>\n        <Chessboard position={game.fen()} onPieceDrop={onDrop} autoPromoteToQueen={true} boardWidth={400}/>\n     </div>\n  )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}