{"ast":null,"code":"var _jsxFileName = \"/Users/adwaithsreekumar/Desktop/CS/Game AI/Bot/bot-frontend/src/ChessB.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [isAITurn, setIsAITurn] = useState(false);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [winner, setWinner] = useState(null);\n  const makeMove = move => {\n    game.move(move);\n    setGame(new Chess(game.fen()));\n    setMoveHistory(prevHistory => [...prevHistory, move]);\n    if (game.isCheckmate()) {\n      setWinner(game.turn() === \"w\" ? \"Black\" : \"White\");\n    } else if (game.isDraw()) {\n      setWinner(\"Draw\");\n    }\n  };\n  function selectMove() {\n    setIsAITurn(true);\n    setTimeout(() => {\n      const [_, move] = minimax(true, -Infinity, Infinity, 4);\n      makeMove(move);\n      setIsAITurn(false);\n    }, 200);\n  }\n  function minimax(blackPlaying, alpha, beta, depth) {\n    if (game.isCheckmate()) return blackPlaying ? [-Infinity, 0] : [Infinity, 0];\n    if (depth === 0) return [evalBoard(game.board()), 0];\n    const possibleMoves = game.moves();\n    if (blackPlaying) {\n      let score = -Infinity;\n      let bestMove = 0;\n      let t = 0;\n      for (const move of possibleMoves) {\n        game.move(move);\n        let [curScore, a] = minimax(false, alpha, beta, depth - 1);\n        game.undo();\n        if (curScore > score) {\n          score = curScore;\n          bestMove = move;\n          t = a;\n        }\n        alpha = Math.max(alpha, curScore);\n        if (beta <= alpha) break;\n      }\n      return [score, bestMove];\n    } else {\n      let score = Infinity;\n      let bestMove = 0;\n      for (const move of possibleMoves) {\n        game.move(move);\n        let [curScore, b] = minimax(true, alpha, beta, depth - 1);\n        game.undo();\n        if (curScore < score) {\n          score = curScore;\n          bestMove = move;\n        }\n        beta = Math.min(beta, curScore);\n        if (beta <= alpha) break;\n      }\n      return [score, bestMove];\n    }\n  }\n  function evalBoard(board) {\n    const pawn_pcsq = [0, 0, 0, 0, 0, 0, 0, 0, 5, 10, 15, 20, 20, 15, 10, 5, 4, 8, 12, 16, 16, 12, 8, 4, 3, 6, 9, 12, 12, 9, 6, 3, 2, 4, 6, 8, 8, 6, 4, 2, 1, 2, 3, -10, -10, 3, 2, 1, 0, 0, 0, -40, -40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    const knight_pcsq = [-10, -10, -10, -10, -10, -10, -10, -10, -10, 0, 0, 0, 0, 0, 0, -10, -10, 0, 5, 5, 5, 5, 0, -10, -10, 0, 5, 10, 10, 5, 0, -10, -10, 0, 5, 10, 10, 5, 0, -10, -10, 0, 5, 5, 5, 5, 0, -10, -10, 0, 0, 0, 0, 0, 0, -10, -10, -30, -10, -10, -10, -10, -30, -10];\n    const bishop_pcsq = [-10, -10, -10, -10, -10, -10, -10, -10, -10, 0, 0, 0, 0, 0, 0, -10, -10, 0, 5, 5, 5, 5, 0, -10, -10, 0, 5, 10, 10, 5, 0, -10, -10, 0, 5, 10, 10, 5, 0, -10, -10, 0, 5, 5, 5, 5, 0, -10, -10, 0, 0, 0, 0, 0, 0, -10, -10, -10, -20, -10, -10, -20, -10, -10];\n    const king_pcsq = [-40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -20, -20, -20, -20, -20, -20, -20, -20, 0, 20, 40, -20, 0, -20, 40, 20];\n    const rook_pcsq = [0, 0, 0, 0, 0, 0, 0, 0, 5, 10, 10, 10, 10, 10, 10, 5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, -5, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 5, 5, 0, 0, 0];\n    const queen_pcsq = [-20, -10, -10, -5, -5, -10, -10, -20, -10, 0, 0, 0, 0, 0, 0, -10, -10, 0, 5, 5, 5, 5, 0, -10, -5, 0, 5, 5, 5, 5, 0, -5, 0, 0, 5, 5, 5, 5, 0, -5, -10, 5, 5, 5, 5, 5, 0, -10, -10, 0, 5, 0, 0, 0, 0, -10, -20, -10, -10, -5, -5, -10, -10, -20];\n    var score = 0;\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 8; j++) {\n        if (board[i][j]) {\n          switch (board[i][j].type) {\n            case \"r\":\n              if (board[i][j].color == \"w\") score -= rook_pcsq[8 * i + j] + 400;else score += rook_pcsq[8 * (7 - i) + (7 - j)] + 400;\n              break;\n            case \"b\":\n              if (board[i][j].color == \"w\") score -= bishop_pcsq[8 * i + j] + 200;else score += bishop_pcsq[8 * (7 - i) + (7 - j)] + 200;\n              break;\n            case \"n\":\n              if (board[i][j].color == \"w\") score -= knight_pcsq[8 * i + j] + 200;else score += knight_pcsq[8 * (7 - i) + (7 - j)] + 200;\n              break;\n            case \"p\":\n              if (board[i][j].color == \"w\") score -= pawn_pcsq[8 * i + j] + 50;else score += pawn_pcsq[8 * (7 - i) + (7 - j)] + 50;\n              break;\n            case \"k\":\n              if (board[i][j].color == \"w\") score -= king_pcsq[8 * i + j] + 500;else score += king_pcsq[8 * (7 - i) + j] + 500;\n              break;\n            case \"q\":\n              if (board[i][j].color == \"w\") score -= queen_pcsq[8 * i + j] + 500;else score += queen_pcsq[8 * (7 - i) + j] + 500;\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    }\n    return score;\n  }\n  function onDrop(sourceSquare, targetSquare) {\n    try {\n      makeMove({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: \"q\" // always promote to a queen for example simplicity\n      });\n      if (!game.isGameOver()) {\n        selectMove(); // Trigger AI move\n      }\n      return true;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.title,\n      children: \"Interactive Chess Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.description,\n      children: \"Play against the AI! Make your move by dragging the pieces.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.winner,\n      children: winner === \"Draw\" ? \"The game is a draw!\" : `${winner} wins by checkmate!`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.gameContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.chessboardWrapper,\n        children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n          position: game.fen(),\n          onPieceDrop: onDrop,\n          autoPromoteToQueen: true,\n          boardWidth: 400\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), isAITurn && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.thinking,\n          children: \"AI is thinking...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.moveHistory,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Move History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: styles.historyList,\n          children: moveHistory.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: `${index % 2 === 0 ? \"White\" : \"Black\"}: ${move}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"eKiyXX3C6kbBDUUXsIsLfvydQYw=\");\n_c = Board;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '50px'\n  },\n  title: {\n    fontSize: '24px',\n    fontWeight: 'bold',\n    marginBottom: '10px'\n  },\n  description: {\n    fontSize: '16px',\n    color: '#666',\n    marginBottom: '20px',\n    textAlign: 'center',\n    maxWidth: '400px'\n  },\n  gameContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  chessboardWrapper: {\n    border: '2px solid #333',\n    padding: '10px',\n    borderRadius: '8px',\n    boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.3)',\n    backgroundColor: '#f8f9fa',\n    position: 'relative'\n  },\n  thinking: {\n    fontSize: '16px',\n    color: '#888',\n    marginTop: '10px'\n  },\n  winner: {\n    fontSize: '18px',\n    fontWeight: 'bold',\n    color: '#d9534f',\n    marginTop: '20px'\n  },\n  moveHistory: {\n    width: '150px',\n    height: '300px',\n    overflowY: 'scroll',\n    backgroundColor: '#e0e0e0',\n    borderRadius: '8px',\n    padding: '10px',\n    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.2)'\n  },\n  historyList: {\n    listStyleType: 'none',\n    paddingLeft: 0,\n    fontSize: '14px',\n    color: '#333'\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useState","Chess","Chessboard","jsxDEV","_jsxDEV","Board","_s","game","setGame","isAITurn","setIsAITurn","moveHistory","setMoveHistory","winner","setWinner","makeMove","move","fen","prevHistory","isCheckmate","turn","isDraw","selectMove","setTimeout","_","minimax","Infinity","blackPlaying","alpha","beta","depth","evalBoard","board","possibleMoves","moves","score","bestMove","t","curScore","a","undo","Math","max","b","min","pawn_pcsq","knight_pcsq","bishop_pcsq","king_pcsq","rook_pcsq","queen_pcsq","i","j","type","color","onDrop","sourceSquare","targetSquare","from","to","promotion","isGameOver","e","console","log","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","gameContainer","chessboardWrapper","position","onPieceDrop","autoPromoteToQueen","boardWidth","thinking","historyList","map","index","_c","display","flexDirection","alignItems","marginTop","fontSize","fontWeight","marginBottom","textAlign","maxWidth","justifyContent","border","padding","borderRadius","boxShadow","backgroundColor","width","height","overflowY","listStyleType","paddingLeft","$RefreshReg$"],"sources":["/Users/adwaithsreekumar/Desktop/CS/Game AI/Bot/bot-frontend/src/ChessB.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\n\nexport default function Board() {\n  const [game, setGame] = useState(new Chess());\n  const [isAITurn, setIsAITurn] = useState(false);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [winner, setWinner] = useState(null);\n\n  const makeMove = (move) => {\n    game.move(move)\n    setGame(new Chess(game.fen()))\n\n    setMoveHistory((prevHistory) => [...prevHistory, move]);\n    if (game.isCheckmate()) {\n      setWinner(game.turn() === \"w\" ? \"Black\" : \"White\");\n    } else if (game.isDraw()) {\n      setWinner(\"Draw\");\n    }\n  }\n\n\n  function selectMove(){\n    setIsAITurn(true);\n    setTimeout(() => {\n      const [_, move] = minimax(true, -Infinity, Infinity, 4);\n      makeMove(move);\n      setIsAITurn(false);\n    }, 200);   \n  }\n\n\n  function minimax(blackPlaying, alpha, beta, depth) {\n    if (game.isCheckmate()) return blackPlaying ? [-Infinity, 0] : [Infinity, 0];\n    if (depth === 0) return [evalBoard(game.board()), 0]\n    \n\n    const possibleMoves = game.moves();\n\n    \n    if (blackPlaying){\n      let score = -Infinity;\n      let bestMove = 0\n      let t = 0\n      for (const move of possibleMoves){\n        game.move(move)\n        let [curScore, a] = minimax(false, alpha, beta, depth-1);\n        game.undo()\n        if (curScore > score) {score = curScore; bestMove = move; t =a}\n        alpha = Math.max(alpha, curScore);\n        if (beta <= alpha) break\n      }\n      return [score, bestMove]\n    }\n    else {\n      let score = Infinity;\n      let bestMove = 0\n\n      for (const move of possibleMoves){\n        game.move(move)\n        let [curScore, b] = minimax(true, alpha, beta, depth-1);\n        game.undo()\n        if (curScore < score) {score = curScore; bestMove = move}\n        beta = Math.min(beta, curScore);\n        if (beta <= alpha) break\n      }\n      return [score, bestMove]\n    }\n\n  }\n\n\n  function evalBoard(board) {\n    const pawn_pcsq = [\n      0, 0, 0, 0, 0, 0, 0, 0,\n      5, 10, 15, 20, 20, 15, 10, 5,\n      4, 8, 12, 16, 16, 12, 8, 4,\n      3, 6, 9, 12, 12, 9, 6, 3,\n      2, 4, 6, 8, 8, 6, 4, 2,\n      1, 2, 3, -10, -10, 3, 2, 1,\n      0, 0, 0, -40, -40, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0\n    ];\n  \n    const knight_pcsq = [\n        -10, -10, -10, -10, -10, -10, -10, -10,\n        -10, 0, 0, 0, 0, 0, 0, -10,\n        -10, 0, 5, 5, 5, 5, 0, -10,\n        -10, 0, 5, 10, 10, 5, 0, -10,\n        -10, 0, 5, 10, 10, 5, 0, -10,\n        -10, 0, 5, 5, 5, 5, 0, -10,\n        -10, 0, 0, 0, 0, 0, 0, -10,\n        -10, -30, -10, -10, -10, -10, -30, -10\n      ];\n    \n    const bishop_pcsq = [\n        -10, -10, -10, -10, -10, -10, -10, -10,\n        -10, 0, 0, 0, 0, 0, 0, -10,\n        -10, 0, 5, 5, 5, 5, 0, -10,\n        -10, 0, 5, 10, 10, 5, 0, -10,\n        -10, 0, 5, 10, 10, 5, 0, -10,\n        -10, 0, 5, 5, 5, 5, 0, -10,\n        -10, 0, 0, 0, 0, 0, 0, -10,\n        -10, -10, -20, -10, -10, -20, -10, -10\n    ];\n    \n    const king_pcsq = [\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -40, -40, -40, -40, -40, -40, -40, -40,\n        -20, -20, -20, -20, -20, -20, -20, -20,\n        0, 20, 40, -20, 0, -20, 40, 20\n    ];\n\n    const rook_pcsq = [\n      0,  0,  0,  0,  0,  0,  0,  0,\n      5, 10, 10, 10, 10, 10, 10,  5,\n     -5,  0,  0,  0,  0,  0,  0, -5,\n     -5,  0,  0,  0,  0,  0,  0, -5,\n     -5,  0,  0,  0,  0,  0,  0, -5,\n     -5,  0,  0,  0,  0,  0,  0, -5,\n     -5,  0,  0,  0,  0,  0,  0, -5,\n      0,  0,  0,  5,  5,  0,  0,  0\n   ];\n \n\n    const queen_pcsq = [\n      -20, -10, -10, -5, -5, -10, -10, -20,\n      -10, 0, 0, 0, 0, 0, 0, -10,\n      -10, 0, 5, 5, 5, 5, 0, -10,\n      -5, 0, 5, 5, 5, 5, 0, -5,\n      0, 0, 5, 5, 5, 5, 0, -5,\n      -10, 5, 5, 5, 5, 5, 0, -10,\n      -10, 0, 5, 0, 0, 0, 0, -10,\n      -20, -10, -10, -5, -5, -10, -10, -20\n  ];\n  \n\n    var score = 0;\n    for (let i = 0; i < 8; i++){\n      for (let j = 0; j < 8; j++){\n        if (board[i][j]){\n          switch(board[i][j].type){\n            case \"r\":\n              if (board[i][j].color == \"w\") score -= (rook_pcsq[(8*i)+j] + 400)\n              else score += (rook_pcsq[(8*(7-i))+(7-j)] + 400)\n              break;\n            case \"b\":\n              if (board[i][j].color == \"w\") score -= (bishop_pcsq[(8*i)+j] + 200)\n              else score += (bishop_pcsq[(8*(7-i))+(7-j)] + 200)\n              break;\n            case \"n\":\n              if (board[i][j].color == \"w\") score -= (knight_pcsq[(8*i)+j] + 200)\n              else score += (knight_pcsq[(8*(7-i))+(7-j)] + 200)\n              break;\n            case \"p\":\n              if (board[i][j].color == \"w\") score -= (pawn_pcsq[(8*i)+j] + 50)\n              else score += pawn_pcsq[(8*(7-i))+(7-j)] + 50\n              break;\n            case \"k\":\n                if (board[i][j].color == \"w\") score -= (king_pcsq[(8*i)+j] + 500)\n                else score += (king_pcsq[(8*(7-i))+(j)] + 500)\n                break;\n            case \"q\":\n              if (board[i][j].color == \"w\") score -= (queen_pcsq[(8*i)+j] + 500)\n              else score += (queen_pcsq[(8*(7-i))+(j)] + 500)\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    }\n    return score;\n\n   }\n\n\n\n  function onDrop(sourceSquare, targetSquare) {\n    try{\n      makeMove({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: \"q\", // always promote to a queen for example simplicity\n      });\n\n      if (!game.isGameOver()) {\n        selectMove(); // Trigger AI move\n      }      \n      return true;\n    }\n    catch (e) { console.log(e)}\n  }\n\nreturn (\n    <div style={styles.container}>\n      <h1 style={styles.title}>Interactive Chess Game</h1>\n      <p style={styles.description}>Play against the AI! Make your move by dragging the pieces.</p>\n      {winner && (\n        <div style={styles.winner}>\n          {winner === \"Draw\" ? \"The game is a draw!\" : `${winner} wins by checkmate!`}\n        </div>\n      )}\n      <div style={styles.gameContainer}>\n        <div style={styles.chessboardWrapper}>\n          <Chessboard\n            position={game.fen()}\n            onPieceDrop={onDrop}\n            autoPromoteToQueen={true}\n            boardWidth={400}\n          />\n          {isAITurn && <p style={styles.thinking}>AI is thinking...</p>}\n        </div>\n        <div style={styles.moveHistory}>\n          <h2>Move History</h2>\n          <ul style={styles.historyList}>\n            {moveHistory.map((move, index) => (\n              <li key={index}>{`${index % 2 === 0 ? \"White\" : \"Black\"}: ${move}`}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '50px',\n  },\n  title: {\n    fontSize: '24px',\n    fontWeight: 'bold',\n    marginBottom: '10px',\n  },\n  description: {\n    fontSize: '16px',\n    color: '#666',\n    marginBottom: '20px',\n    textAlign: 'center',\n    maxWidth: '400px',\n  },\n  gameContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  chessboardWrapper: {\n    border: '2px solid #333',\n    padding: '10px',\n    borderRadius: '8px',\n    boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.3)',\n    backgroundColor: '#f8f9fa',\n    position: 'relative',\n  },\n  thinking: {\n    fontSize: '16px',\n    color: '#888',\n    marginTop: '10px',\n  },\n  winner: {\n    fontSize: '18px',\n    fontWeight: 'bold',\n    color: '#d9534f',\n    marginTop: '20px',\n  },\n  moveHistory: {\n    width: '150px',\n    height: '300px',\n    overflowY: 'scroll',\n    backgroundColor: '#e0e0e0',\n    borderRadius: '8px',\n    padding: '10px',\n    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.2)',\n  },\n  historyList: {\n    listStyleType: 'none',\n    paddingLeft: 0,\n    fontSize: '14px',\n    color: '#333',\n  },\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}